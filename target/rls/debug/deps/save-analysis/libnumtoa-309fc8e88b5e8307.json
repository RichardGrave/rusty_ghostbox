{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0","program":"/Users/richardgrave/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","numtoa","/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=309fc8e88b5e8307","-C","extra-filename=-309fc8e88b5e8307","--out-dir","/Users/richardgrave/Programming/Rust/ghostbox/target/rls/debug/deps","-L","dependency=/Users/richardgrave/Programming/Rust/ghostbox/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/richardgrave/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/richardgrave/Programming/Rust/ghostbox/target/rls/debug/deps/libnumtoa-309fc8e88b5e8307.rmeta"},"prelude":{"crate_id":{"name":"numtoa","disambiguator":[17319897301543608053,404586193614039210]},"crate_root":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src","external_crates":[{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}}],"span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":27},{"krate":0,"index":31}],"decl_id":null,"docs":" The standard library provides a convenient method of converting numbers into strings, but these strings are\n heap-allocated. If you have an application which needs to convert large volumes of numbers into strings, but don't\n want to pay the price of heap allocation, this crate provides an efficient `no_std`-compatible method of heaplessly converting numbers\n into their string representations, storing the representation within a reusable byte array.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3076,"byte_end":3086,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3305,"byte_end":3311,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"NumToA","qualname":"::NumToA","value":"NumToA<T>","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" Converts a number into a string representation, storing the conversion into a mutable byte slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4328,"byte_end":4334,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"numtoa","qualname":"::NumToA::numtoa","value":"fn (self, base: T, string: &mut [u8]) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Given a base for encoding and a mutable byte slice, write the number into the byte slice and return the\n indice where the inner string begins. The inner string can be extracted by slicing the byte slice from\n that indice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4502,"byte_end":4512,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"numtoa_str","qualname":"::NumToA::numtoa_str","value":"fn (self, base: T, buf: &mut [u8; 20]) -> &str","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Convenience method for quickly getting a string from the input's array buffer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/richardgrave/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4384,"byte_end":4407,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}